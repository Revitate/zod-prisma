"use strict";var e=require("@prisma/generator-helper"),n=require("ts-morph"),t=require("typescript"),r=require("zod"),a=require("path"),i=require("parenthesis");function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=o(a);function c(){return c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},c.apply(this,arguments)}var l=r.z.enum(["true","false"]).transform((function(e){return JSON.parse(e)})),s=r.z.object({relationModel:l.default("true").or(r.z.literal("default")),modelSuffix:r.z.string().default("Model"),modelCase:r.z.enum(["PascalCase","camelCase"]).default("PascalCase"),useDecimalJs:l.default("false"),imports:r.z.string().optional(),prismaJsonNullability:l.default("true")}),d=function(e,n,t){return void 0===t&&(t=!0),n.forEach((function(n){return e.write(n).conditionalNewLine(t)}))},m=function(e){var n=e.modelCase,t=e.modelSuffix,r=e.relationModel,a=function(e,r){return void 0===r&&(r=""),"camelCase"===n&&(e=e.slice(0,1).toLowerCase()+e.slice(1)),""+r+e+t};return{modelName:function(e){return a(e,"default"===r?"_":"")},relatedModelName:function(e){return a("default"===r?e.toString():"Related"+e.toString())}}},f=function(e){var n=[];if(e){var t=e.split("\n").filter((function(e){return!e.trimStart().startsWith("@zod")}));t.length&&(n.push("/**"),t.forEach((function(e){return n.push(" * "+e)})),n.push(" */"))}return n},p=function(e){return e.split("\n").filter((function(e){return e.trimStart().startsWith("@zod")})).map((function(e){return e.trimStart().slice(4)})).flatMap((function(e){return(n=i.parse(e),n.reduce((function(e,n,t){return t%2==0?[].concat(e,[[n]]):[].concat(e.slice(0,-1),[[].concat(e.slice(-1)[0],[n])])}),[])).slice(0,-1).map((function(e){var n=e[1];return e[0].replace(/\)?\./,"")+(i.stringify(n)+")")}));var n}))},h=function(e,n,t){void 0===t&&(t=function(e){return e.toString()});var r,a,i="z.unknown()",o=[""];if("scalar"===e.kind)switch(e.type){case"String":i="z.string()";break;case"Int":i="z.number()",o.push("int()");break;case"BigInt":i="z.bigint()";break;case"DateTime":i="z.date()";break;case"Float":case"Decimal":i="z.number()";break;case"Json":i="jsonSchema";break;case"Boolean":i="z.boolean()";break;case"Bytes":i="z.unknown()"}else"enum"===e.kind?i="z.enum(["+n[e.type].values.map((function(e){return"'"+e+"'"})).join(", ")+"])":"object"===e.kind&&(i=t(e.type));return e.isList&&o.push("array()"),e.documentation&&(i=null!=(r=null==(a=p(e.documentation).find((function(e){return e.startsWith("custom(")})))?void 0:a.slice(7).slice(0,-1))?r:i,o.push.apply(o,p(e.documentation).filter((function(e){return!e.startsWith("custom(")})))),e.isRequired||"Json"===e.type||o.push("nullish()"),""+i+o.join(".")};e.generatorHandler({onManifest:function(){return{version:"0.5.5",prettyName:"Zod Schemas",defaultOutput:"zod"}},onGenerate:function(e){var r,a,i=new n.Project,o=e.dmmf.datamodel.models,l=null!=(r=null==(a=e.dmmf.schema.enumTypes.model)?void 0:a.reduce((function(e,n){var t;return c({},e,((t={})[n.name]=n,t))}),{}))?r:{},p=e.schemaPath,v=e.generator.output.value,z=e.otherGenerators.find((function(e){return"prisma-client-js"===e.provider.value})).output.value,S=s.safeParse(e.generator.config);if(!S.success)throw new Error("Incorrect config provided. Please check the values you provided and try again.");var y=S.data,b={clientPath:z,outputPath:v,schemaPath:p},w=i.createSourceFile(v+"/index.ts",{},{overwrite:!0});return function(e,n){e.forEach((function(e){return n.addExportDeclaration({moduleSpecifier:"./"+e.name.toLowerCase()})}))}(o,w),w.formatText({indentSize:2,convertTabsToSpaces:!0,semicolons:t.SemicolonPreference.Remove}),o.forEach((function(e){var r=i.createSourceFile(v+"/"+e.name.toLowerCase()+".ts",{},{overwrite:!0});(function(e,t,r,a,i){!function(e,t,r,a){var i,o,c=a.schemaPath,l=a.outputPath,s=m(r).relatedModelName,d=[{kind:n.StructureKind.ImportDeclaration,namespaceImport:"z",moduleSpecifier:"zod"}];r.imports&&d.push({kind:n.StructureKind.ImportDeclaration,namespaceImport:"imports",moduleSpecifier:(i=u.default.relative(l,u.default.resolve(u.default.dirname(c),r.imports)),o=i.replace(/^\\\\\?\\/,"").replace(/\\/g,"/").replace(/\/\/+/g,"/"),o.includes("/node_modules/")?o.split("/node_modules/").slice(-1)[0]:o.startsWith("../")?o:"./"+o)}),r.useDecimalJs&&e.fields.some((function(e){return"Decimal"===e.type}))&&d.push({kind:n.StructureKind.ImportDeclaration,namedImports:["Decimal"],moduleSpecifier:"decimal.js"});var f=e.fields.filter((function(e){return"object"===e.kind}));if(!1!==r.relationModel&&f.length>0){var p=f.filter((function(n){return n.type!==e.name}));p.length>0&&d.push({kind:n.StructureKind.ImportDeclaration,moduleSpecifier:"./index",namedImports:Array.from(new Set(p.flatMap((function(e){return["Complete"+e.type,s(e.type)]}))))})}t.addImportDeclarations(d)}(e,r,a,i),function(e,n,t,r){e.fields.some((function(e){return"Json"===e.type}))&&n.addStatements((function(e){e.newLine(),d(e,["// Helper schema for JSON fields","type JsonObject = { [Key in string]?: JsonValue }","type JsonArray = Array<JsonValue>","type JsonValue = string | number | boolean | JsonObject | JsonArray | null","const literalSchema = z.union([z.string(), z.number(), z.boolean(), z.null()])","const jsonSchema: z.ZodSchema<JsonValue> = z.lazy(() => z.union([literalSchema, z.array(jsonSchema), z.record(jsonSchema)]))"])})),t.useDecimalJs&&e.fields.some((function(e){return"Decimal"===e.type}))&&n.addStatements((function(e){e.newLine(),d(e,["// Helper schema for Decimal fields","z",".instanceof(Decimal)",".or(z.string())",".or(z.number())",".refine((value) => {","  try {","    return new Decimal(value);","  } catch (error) {","    return false;","  }","})",".transform((value) => new Decimal(value));"])}))}(e,r,a),function(e,t,r,a,i){var o=m(a);r.addVariableStatement({declarationKind:n.VariableDeclarationKind.Const,isExported:!0,leadingTrivia:function(e){return e.blankLineIfLastNot()},declarations:[{name:(0,o.modelName)(e.name),initializer:function(n){n.write("z.object(").inlineBlock((function(){e.fields.filter((function(e){return"object"!==e.kind})).forEach((function(e){d(n,f(e.documentation)),n.write(e.name+": "+h(e,t)).write(",").newLine()}))})).write(")")}}]})}(e,t,r,a),function(e,n){return e.fields.some((function(e){return"object"===e.kind}))&&!1!==n.relationModel}(e,a)&&function(e,t,r,a,i){var o=m(a),u=o.modelName,c=o.relatedModelName,l=e.fields.filter((function(e){return"object"===e.kind}));r.addInterface({name:"Complete"+e.name,isExported:!0,extends:["z.infer<typeof "+u(e.name)+">"],properties:l.map((function(e){return{hasQuestionToken:!e.isRequired,name:e.name,type:"Complete"+e.type+(e.isList?"[]":"")+(e.isRequired?"":" | null")}}))}),r.addStatements((function(n){return d(n,["","/**"," * "+c(e.name)+" contains all relations on your model in addition to the scalars"," *"," * NOTE: Lazy required in case of potential circular dependencies within schema"," */"])})),r.addVariableStatement({declarationKind:n.VariableDeclarationKind.Const,isExported:!0,declarations:[{name:c(e.name),type:"z.ZodSchema<Complete"+e.name+">",initializer:function(n){n.write("z.lazy(() => "+u(e.name)+".extend(").inlineBlock((function(){l.forEach((function(e){d(n,f(e.documentation)),n.write(e.name+": "+h(e,t,c)).write(",").newLine()}))})).write("))")}}]})}(e,t,r,a)})(e,l,r,y,b),r.formatText({indentSize:2,convertTabsToSpaces:!0,semicolons:t.SemicolonPreference.Remove})})),i.save()}});
//# sourceMappingURL=zod-prisma.cjs.production.min.js.map

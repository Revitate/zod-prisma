import { DMMF } from '@prisma/generator-helper';
import { SourceFile } from 'ts-morph';
import { Config, PrismaOptions } from './config';
import { EnumModel } from './types';
export declare const writeImportsForModel: (model: DMMF.Model, sourceFile: SourceFile, config: Config, { schemaPath, outputPath }: PrismaOptions) => void;
export declare const writeTypeSpecificSchemas: (model: DMMF.Model, sourceFile: SourceFile, config: Config, _prismaOptions: PrismaOptions) => void;
export declare const generateSchemaForModel: (model: DMMF.Model, enums: EnumModel, sourceFile: SourceFile, config: Config, _prismaOptions: PrismaOptions) => void;
export declare const generateRelatedSchemaForModel: (model: DMMF.Model, enums: EnumModel, sourceFile: SourceFile, config: Config, _prismaOptions: PrismaOptions) => void;
export declare const populateModelFile: (model: DMMF.Model, enums: EnumModel, sourceFile: SourceFile, config: Config, prismaOptions: PrismaOptions) => void;
export declare const generateBarrelFile: (models: DMMF.Model[], indexFile: SourceFile) => void;
